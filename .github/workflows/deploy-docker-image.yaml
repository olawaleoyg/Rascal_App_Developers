name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    branches: [ "main", "ft/chatbot-codebase" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: docker.io
  # github.repository as <account>/<repo>
  # IMAGE_NAME: ${{ github.repository }}


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # - uses: mr-smithers-excellent/docker-build-push@v6
      #   name: Build & push Docker image
      #   with:
      #     image: ${{ vars.IMAGE_NAME }}" 
      #     # tags: v1, latest
      #     registry: docker.io
      #     # dockerfile: Dockerfile.ci
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Print debug info
        run: |
          # echo "REGISTRY=${{ secrets.REGISTRY }}"
          echo "IMAGE_NAME=${{ vars.IMAGE_NAME }}"        
        
      - uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: olawaleoyg/chatbot:latest
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Workaround: https://github.com/docker/build-push-action/issues/461
      # - name: Setup Docker buildx
      #   uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf




      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      # - name: Log into registry ${{ secrets.REGISTRY }}
      #   if: github.event_name != 'pull_request'
      #   uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
      #   with:
      #     registry: ${{ secrets.REGISTRY }}
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}

      # # Extract metadata (tags, labels) for Docker
      # # https://github.com/docker/metadata-action
      # - name: Extract Docker metadata
      #   id: meta
      #   uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      #   with:
      #     images: ${{ secrets.REGISTRY }}/${{ vars.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action

      # - name: Build and push Docker image
      #   id: build-and-push
      #   uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
      #   with:
      #     context: .
      #     push: ${{ github.event_name != 'pull_request' }}
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}
      #     cache-from: type=gha
      #     cache-to: type=gha,mode=max

      # - name: Test build and push to ECR
      #   id: ecr-test-build-and-push
      #   uses: aws-actions/amazon-ecr-build-and-push-image@v1
      #   with:
      #     repository-name: ${{ env.IMAGE_NAME }}
      #     image-tag: latest
      #     region: eu-west-2
      #     env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     AWS_REGION: eu-west-2 
      #     ECR_URI: ${{ secrets.ECR_URI }}
      #     TAG: latest
      #     CI_COMMIT_SHORT_SHA: ${{ github.sha }}
      # - run: |
      #     echo $ECR_URI
      #     echo $TAG
      #     echo $CI_COMMIT_SHORT_SHA
      #     aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_URI
      #     docker build -t $ECR_URI:$TAG -f ./apps/auth-service/Dockerfile .
      #     docker build -t $ECR_URI:$CI_COMMIT_SHORT_SHA -f ./apps/auth-service/Dockerfile .
      #     docker push $ECR_URI:$TAG
      #     docker push $ECR_URI:$CI_COMMIT_SHORT_SHA