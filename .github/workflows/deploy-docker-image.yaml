name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    branches: [ "main", "ft/chatbot-codebase" ]

# env:
  # Use docker.io for Docker Hub if empty
  # REGISTRY: docker.io
  # github.repository as <account>/<repo>
  # IMAGE_NAME: ${{ github.repository }}


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      # - name: Checkout repository
      #   uses: actions/checkout@v3
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry: public.ecr.aws
          username: ${{ secrets.ACCESS_KEY_ID }}
          password: ${{ secrets.SECRET_ACCESS_KEY }}

      - name: Create config.toml file
        env:
          TOKEN: ${{ secrets.MAPBOX_API_TOKEN }}
        run: sed "s/TOKEN_PLACEHOLDER/$TOKEN/g" ./app/.streamlit/config.template > ./app/.streamlit/config.toml

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./app
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: public.ecr.aws/t5i1x5v9/samanja-dev:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      # - name: Build, tag, and push image to Amazon ECR
      #   env:
      #     ECR_REGISTRY: public.ecr.aws
      #     ECR_REPOSITORY: samanja-dev
      #     IMAGE_TAG: latest
      #   run: |
      #     docker build -t samanja-dev .
      #     docker tag samanja-dev:latest public.ecr.aws/t5i1x5v9/samanja-dev:latest
      #     docker push public.ecr.aws/t5i1x5v9/samanja-dev:latest

        # - uses: mr-smithers-excellent/docker-build-push@v6
        #   with:
        #     image: olawaleoyg/chatbot
        #     registry: docker.io
        #     username: ${{ secrets.DOCKER_USERNAME }}
        #     password: ${{ secrets.DOCKER_PASSWORD }}
            